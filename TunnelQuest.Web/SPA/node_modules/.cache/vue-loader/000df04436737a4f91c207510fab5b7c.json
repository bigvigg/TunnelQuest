{"remainingRequest":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\components\\MainMenuPage.vue?vue&type=script&lang=ts&","dependencies":[{"path":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\components\\MainMenuPage.vue","mtime":1550112084894},{"path":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport mixins from 'vue-typed-mixins';\n\nimport TqPage from \"../mixins/TqPage\";\n\nimport SiteHeader from \"./SiteHeader.vue\";\n\n\nexport default mixins(TqPage).extend({\n\n    name: \"MainMenuPage\",\n\n    beforeRouteEnter: function (to: any, from: any, next: any) {\n\n        // If the user goes directly to the main menu page (not by clicking on a route-link),\n        // then attempt to automatically send them back to the last LivePage they were looking at,\n        // as a convenience.  They can still go back to the main menu by clicking the link in the header.\n        if (from == null || from.name == null) {\n            let lastLivePageString = localStorage.getItem(\"LastLivePage\");\n            if (lastLivePageString != null) {\n                let lastLivePageInfo = JSON.parse(lastLivePageString);\n                next({ path: lastLivePageInfo.fullPath });\n            }\n            else\n                next();\n        }\n        else\n            next();\n    },\n\n    components: {\n        SiteHeader\n    }\n});\n",{"version":3,"sources":["MainMenuPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"MainMenuPage.vue","sourceRoot":"src\\components","sourcesContent":["\r\n\r\n<style>\r\n    .tqMainMenuPage {\r\n    }\r\n\r\n    .tqMainMenuPage > a {\r\n        display: block;\r\n        background-color: rgba(0,0,0,0.7);\r\n        color: #ffffff;\r\n        font-weight: bold;\r\n        font-size: 1.5em;\r\n        padding: 5px;\r\n        margin: 10px;\r\n        text-decoration: none;\r\n        \r\n    }\r\n\r\n    .tqMainMenuPage > a:hover {\r\n        background-color: #ce9000;\r\n    }\r\n\r\n</style>\r\n\r\n\r\n<template>\r\n    <div class=\"tqMainMenuPage\">\r\n        <site-header></site-header>\r\n\r\n        <router-link to=\"/auctions\">Auction House Mode</router-link>\r\n        <router-link to=\"/newspaper\">Newspaper Mode</router-link>\r\n        <router-link to=\"/chat\">Chat Mode</router-link>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import mixins from 'vue-typed-mixins';\r\n\r\n    import TqPage from \"../mixins/TqPage\";\r\n\r\n    import SiteHeader from \"./SiteHeader.vue\";\r\n\r\n\r\n    export default mixins(TqPage).extend({\r\n\r\n        name: \"MainMenuPage\",\r\n\r\n        beforeRouteEnter: function (to: any, from: any, next: any) {\r\n\r\n            // If the user goes directly to the main menu page (not by clicking on a route-link),\r\n            // then attempt to automatically send them back to the last LivePage they were looking at,\r\n            // as a convenience.  They can still go back to the main menu by clicking the link in the header.\r\n            if (from == null || from.name == null) {\r\n                let lastLivePageString = localStorage.getItem(\"LastLivePage\");\r\n                if (lastLivePageString != null) {\r\n                    let lastLivePageInfo = JSON.parse(lastLivePageString);\r\n                    next({ path: lastLivePageInfo.fullPath });\r\n                }\r\n                else\r\n                    next();\r\n            }\r\n            else\r\n                next();\r\n        },\r\n\r\n        components: {\r\n            SiteHeader\r\n        }\r\n    });\r\n</script>\r\n"]}]}