{"remainingRequest":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\components\\ItemMetaView.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\components\\ItemMetaView.vue","mtime":1548991091619},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n.tqItemMetaView {\n    background-color: red;\n    width: 100%;\n}\n\n/* override some of the item css to make it look better on this page */\n.tqItemMetaView .tqItem {\n    /* center the item block on the page */\n    margin: auto auto;\n}\n",{"version":3,"sources":["ItemMetaView.vue"],"names":[],"mappings":";;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ItemMetaView.vue","sourceRoot":"src\\components","sourcesContent":["\r\n<style>\r\n    .tqItemMetaView {\r\n        background-color: red;\r\n        width: 100%;\r\n    }\r\n\r\n    /* override some of the item css to make it look better on this page */\r\n    .tqItemMetaView .tqItem {\r\n        /* center the item block on the page */\r\n        margin: auto auto;\r\n    }\r\n</style>\r\n\r\n<template>\r\n    <div class=\"tqItemMetaView\">\r\n        <item-view v-if=\"item != null && item.isFetched\" :item=\"item\"></item-view>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import Vue from \"vue\";\r\n\r\n    import Item from '../interfaces/Item';\r\n\r\n    import ItemView from \"./ItemView.vue\";\r\n\r\n    import TQGlobals from \"../classes/TQGlobals\";\r\n\r\n    export default Vue.extend({\r\n\r\n        props: {\r\n            itemName: {\r\n                type: String,\r\n                required: true\r\n            }\r\n        },\r\n\r\n        data: function () {\r\n            return {\r\n                item: null as Item | null\r\n            };\r\n        },\r\n\r\n        watch: {\r\n            itemName: function (newValue: string, oldValue: string) {\r\n                this.setItemFromItemName(newValue);\r\n            }\r\n        },\r\n\r\n        mounted: function () {\r\n            TQGlobals.onInit(this.onInit);\r\n        },\r\n\r\n        methods: {\r\n            onInit: function () {\r\n                this.setItemFromItemName(this.itemName);\r\n            },\r\n\r\n            setItemFromItemName: function (name:string) {\r\n                if (!name)\r\n                    this.item = null;\r\n                else if (name.trim().length == 0)\r\n                    this.item = null;\r\n                else if (TQGlobals.isInitComplete())\r\n                    this.item = TQGlobals.items.get(name);\r\n            }\r\n        },\r\n\r\n        components: {\r\n            ItemView\r\n        },\r\n    });\r\n</script>\r\n\r\n"]}]}