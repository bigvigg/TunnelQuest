{"remainingRequest":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\components\\ItemPage.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\components\\ItemPage.vue","mtime":1552277191797},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport axios from \"axios\";\nimport mixins from 'vue-typed-mixins';\n\nimport Item from '../interfaces/Item';\nimport Auction from '../interfaces/Auction';\nimport LinesAndAuctions from \"../interfaces/LinesAndAuctions\";\n\nimport TQGlobals from \"../classes/TQGlobals\";\nimport SlidingList from \"../classes/SlidingList\";\n\nimport TqPage from \"../mixins/TqPage\";\n\nimport SiteHeader from \"./SiteHeader.vue\";\nimport ItemView from \"./ItemView.vue\";\nimport PriceHistoryView from \"./PriceHistoryView.vue\";\nimport ChatLineView from \"./ChatLineView.vue\";\n\n\nexport default mixins(TqPage).extend({\n\n    name: \"ItemPage\",\n\n    data: function () {\n        return {\n            // STUB hard-coded\n            serverCode: \"BLUE\",\n\n            item: null as Item | null,\n\n            auctions: new SlidingList<Auction>(function (a: Auction, b: Auction) {\n                // sort descending updatedAtString\n                if (a.updatedAtString < b.updatedAtString)\n                    return 1;\n                else if (a.updatedAtString > b.updatedAtString)\n                    return -1;\n                else {\n                    // sort descending id\n                    if (a.id < b.id)\n                        return 1;\n                    else if (a.id > b.id)\n                        return -1;\n                    else\n                        return 0;\n                }\n            })\n        };\n    },\n\n    mounted: function () {\n        window.addEventListener(\"scroll\", this.onScroll);\n\n        TQGlobals.init(() => {\n            this.item = TQGlobals.items.get(this.$route.params.itemName);\n            this.getLatestContent();\n        });\n    },\n\n    watch: {\n        $route (to, from) {\n            this.item = TQGlobals.items.get(this.$route.params.itemName);\n            this.getLatestContent();\n        }\n    },\n\n    beforeDestroy: function () {\n        window.removeEventListener(\"scroll\", this.onScroll);\n    },\n\n    methods: {\n        // inherited from TqPage\n        getLatestContent: function () {\n            this.auctions.clear();\n\n            axios.post('/api/auction_query', {\n                serverCode: this.serverCode,\n                itemName: this.$route.params.itemName,\n                includeChatLine: true\n            })\n            .then(response => {\n                let itemAuctions = response.data as LinesAndAuctions;\n                this.onNewContent(itemAuctions, true);\n            })\n            .catch(err => {\n                // stub\n                console.log(err);\n            });\n        },\n\n        // inherited from TqPage\n        getEarlierContent: function () {\n            let maxId: number | null = null;\n            if (this.auctions.array.length > 0)\n                maxId = this.auctions.array[this.auctions.array.length - 1].id - 1;\n\n            axios.post('/api/auction_query', {\n                serverCode: this.serverCode,\n                itemName: this.$route.params.itemName,\n                maximumId: maxId,\n                includeChatLine: true\n            })\n            .then(response => {\n                let itemAuctions = response.data as LinesAndAuctions;\n                this.onNewContent(itemAuctions, false);\n            })\n            .catch(err => {\n                // stub\n                console.log(err);\n            });\n        },\n\n\n        // inherited from TqPage\n        onFilteredContent: function (itemAuctions: LinesAndAuctions, enforceMaxSize: boolean) {\n            for (let auctionId in itemAuctions.auctions) {\n                let auction = itemAuctions.auctions[auctionId];\n                this.auctions.add(auction);\n            }\n\n            if (enforceMaxSize)\n                this.auctions.enforceMaxSize();\n\n            this.auctions.sort();\n        }\n    },\n\n    components: {\n        SiteHeader,\n        ItemView,\n        PriceHistoryView,\n        ChatLineView\n    },\n});\n",{"version":3,"sources":["ItemPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ItemPage.vue","sourceRoot":"src\\components","sourcesContent":["\r\n\r\n<style>\r\n    .tqItemPage {\r\n        width: 100%;\r\n    }\r\n\r\n    /* override some of the item css to make it look better on this page */\r\n    .tqItemPage .tqItem {\r\n        /* center the item block on the page */\r\n        margin: auto auto;\r\n    }\r\n\r\n    .tqItemPageSection {\r\n        margin-top: 20px !important;\r\n    }\r\n\r\n    .tqItemPageAuctionSection {\r\n        margin: auto auto;\r\n        max-width: 600px;\r\n    }\r\n\r\n    .tqItemSectionHeader {\r\n        background-color: #55a2c6;\r\n        color: #ffffff;\r\n        font-weight: bold;\r\n        text-align: center;\r\n        font-size: 1.2em;\r\n    }\r\n\r\n    .tqItemAuctionWtb {\r\n        background-color: rgba(7,0,99,0.7);\r\n    }\r\n\r\n    .tqItemAuctionWts {\r\n        background-color: rgba(0,0,0,0.7);\r\n    }\r\n    \r\n</style>\r\n\r\n\r\n<template>\r\n    <div class=\"tqItemPage\">\r\n        <site-header></site-header>\r\n        <item-view v-if=\"item != null && item.isFetched\" :item=\"item\"></item-view>\r\n\r\n        <div class=\"tqItemPageSection\">\r\n            <price-history-view :itemName=\"$route.params.itemName\"></price-history-view>\r\n        </div>\r\n        \r\n        <div class=\"tqItemPageSection tqItemPageAuctionSection\">\r\n            <div class=\"tqItemSectionHeader\">\r\n                Auction History\r\n            </div>\r\n            <div>\r\n                <chat-line-view v-for=\"auction in auctions.array\" :key=\"auction.chatLine.id\" :chatLine=\"auction.chatLine\" :showTimestamp=\"true\" :itemNameLinks=\"true\" :itemNameToHighlight=\"auction.itemName\" :cssClass=\"auction.isBuying ? 'tqAuctionHouseAuctionWtb' : 'tqAuctionHouseAuctionWts'\"></chat-line-view>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import axios from \"axios\";\r\n    import mixins from 'vue-typed-mixins';\r\n\r\n    import Item from '../interfaces/Item';\r\n    import Auction from '../interfaces/Auction';\r\n    import LinesAndAuctions from \"../interfaces/LinesAndAuctions\";\r\n\r\n    import TQGlobals from \"../classes/TQGlobals\";\r\n    import SlidingList from \"../classes/SlidingList\";\r\n\r\n    import TqPage from \"../mixins/TqPage\";\r\n\r\n    import SiteHeader from \"./SiteHeader.vue\";\r\n    import ItemView from \"./ItemView.vue\";\r\n    import PriceHistoryView from \"./PriceHistoryView.vue\";\r\n    import ChatLineView from \"./ChatLineView.vue\";\r\n\r\n\r\n    export default mixins(TqPage).extend({\r\n\r\n        name: \"ItemPage\",\r\n\r\n        data: function () {\r\n            return {\r\n                // STUB hard-coded\r\n                serverCode: \"BLUE\",\r\n\r\n                item: null as Item | null,\r\n\r\n                auctions: new SlidingList<Auction>(function (a: Auction, b: Auction) {\r\n                    // sort descending updatedAtString\r\n                    if (a.updatedAtString < b.updatedAtString)\r\n                        return 1;\r\n                    else if (a.updatedAtString > b.updatedAtString)\r\n                        return -1;\r\n                    else {\r\n                        // sort descending id\r\n                        if (a.id < b.id)\r\n                            return 1;\r\n                        else if (a.id > b.id)\r\n                            return -1;\r\n                        else\r\n                            return 0;\r\n                    }\r\n                })\r\n            };\r\n        },\r\n\r\n        mounted: function () {\r\n            window.addEventListener(\"scroll\", this.onScroll);\r\n\r\n            TQGlobals.init(() => {\r\n                this.item = TQGlobals.items.get(this.$route.params.itemName);\r\n                this.getLatestContent();\r\n            });\r\n        },\r\n\r\n        watch: {\r\n            $route (to, from) {\r\n                this.item = TQGlobals.items.get(this.$route.params.itemName);\r\n                this.getLatestContent();\r\n            }\r\n        },\r\n\r\n        beforeDestroy: function () {\r\n            window.removeEventListener(\"scroll\", this.onScroll);\r\n        },\r\n\r\n        methods: {\r\n            // inherited from TqPage\r\n            getLatestContent: function () {\r\n                this.auctions.clear();\r\n\r\n                axios.post('/api/auction_query', {\r\n                    serverCode: this.serverCode,\r\n                    itemName: this.$route.params.itemName,\r\n                    includeChatLine: true\r\n                })\r\n                .then(response => {\r\n                    let itemAuctions = response.data as LinesAndAuctions;\r\n                    this.onNewContent(itemAuctions, true);\r\n                })\r\n                .catch(err => {\r\n                    // stub\r\n                    console.log(err);\r\n                });\r\n            },\r\n\r\n            // inherited from TqPage\r\n            getEarlierContent: function () {\r\n                let maxId: number | null = null;\r\n                if (this.auctions.array.length > 0)\r\n                    maxId = this.auctions.array[this.auctions.array.length - 1].id - 1;\r\n\r\n                axios.post('/api/auction_query', {\r\n                    serverCode: this.serverCode,\r\n                    itemName: this.$route.params.itemName,\r\n                    maximumId: maxId,\r\n                    includeChatLine: true\r\n                })\r\n                .then(response => {\r\n                    let itemAuctions = response.data as LinesAndAuctions;\r\n                    this.onNewContent(itemAuctions, false);\r\n                })\r\n                .catch(err => {\r\n                    // stub\r\n                    console.log(err);\r\n                });\r\n            },\r\n\r\n\r\n            // inherited from TqPage\r\n            onFilteredContent: function (itemAuctions: LinesAndAuctions, enforceMaxSize: boolean) {\r\n                for (let auctionId in itemAuctions.auctions) {\r\n                    let auction = itemAuctions.auctions[auctionId];\r\n                    this.auctions.add(auction);\r\n                }\r\n\r\n                if (enforceMaxSize)\r\n                    this.auctions.enforceMaxSize();\r\n\r\n                this.auctions.sort();\r\n            }\r\n        },\r\n\r\n        components: {\r\n            SiteHeader,\r\n            ItemView,\r\n            PriceHistoryView,\r\n            ChatLineView\r\n        },\r\n    });\r\n</script>\r\n"]}]}