{"remainingRequest":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\components\\ItemPage.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\components\\ItemPage.vue","mtime":1549943182946},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport mixins from 'vue-typed-mixins';\n\nimport Item from '../interfaces/Item';\n\nimport SiteHeader from \"./SiteHeader.vue\";\nimport ItemView from \"./ItemView.vue\";\n\nimport TQGlobals from \"../classes/TQGlobals\";\n\nimport TqPage from \"../mixins/TqPage\";\n\n\nexport default mixins(TqPage).extend({\n\n    name: \"ItemPage\",\n\n    data: function () {\n        return {\n            item: null as Item | null\n        };\n    },\n\n    mounted: function () {\n        TQGlobals.init(() => {\n            this.item = TQGlobals.items.get(this.$route.params.itemName);\n        });\n    },\n\n    methods: {\n    },\n\n    components: {\n        SiteHeader,\n        ItemView\n    },\n});\n",{"version":3,"sources":["ItemPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ItemPage.vue","sourceRoot":"src\\components","sourcesContent":["\r\n\r\n<style>\r\n    .tqItemPage {\r\n        width: 100%;\r\n    }\r\n\r\n    /* override some of the item css to make it look better on this page */\r\n    .tqItemPage .tqItem {\r\n        /* center the item block on the page */\r\n        margin: auto auto;\r\n    }\r\n</style>\r\n\r\n\r\n<template>\r\n    <div class=\"tqItemPage\">\r\n        <site-header></site-header>\r\n        <item-view v-if=\"item != null && item.isFetched\" :item=\"item\"></item-view>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import mixins from 'vue-typed-mixins';\r\n\r\n    import Item from '../interfaces/Item';\r\n\r\n    import SiteHeader from \"./SiteHeader.vue\";\r\n    import ItemView from \"./ItemView.vue\";\r\n\r\n    import TQGlobals from \"../classes/TQGlobals\";\r\n\r\n    import TqPage from \"../mixins/TqPage\";\r\n\r\n\r\n    export default mixins(TqPage).extend({\r\n\r\n        name: \"ItemPage\",\r\n\r\n        data: function () {\r\n            return {\r\n                item: null as Item | null\r\n            };\r\n        },\r\n\r\n        mounted: function () {\r\n            TQGlobals.init(() => {\r\n                this.item = TQGlobals.items.get(this.$route.params.itemName);\r\n            });\r\n        },\r\n\r\n        methods: {\r\n        },\r\n\r\n        components: {\r\n            SiteHeader,\r\n            ItemView\r\n        },\r\n    });\r\n</script>\r\n"]}]}