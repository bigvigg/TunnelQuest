{"remainingRequest":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\components\\AuctionListView.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\components\\AuctionListView.vue","mtime":1547953954357},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\nimport axios from \"axios\";\nimport mixins from 'vue-typed-mixins';\nimport * as _ from \"lodash\";\n\nimport LinesAndAuctions from \"../interfaces/LinesAndAuctions\";\n\nimport LiveView from \"../mixins/LiveView\";\n\nimport TQGlobals from \"../classes/TQGlobals\";\n\nimport AuctionView from \"./AuctionView.vue\";\n\n\nexport default mixins(LiveView).extend({\n    computed: {\n        viewAuctions: function () {\n            return _.clone(this.auctions.array).reverse();\n        }\n    },\n    created: function () {\n    },\n    mounted: function () {\n    },\n    methods: {\n\n        // inherited from LiveView\n        getLatestContent: function () {\n            let minId: number | null = null;\n            if (this.chatLines.array.length > 0)\n                minId = this.chatLines.array[this.chatLines.array.length - 1].id + 1;\n\n            axios.get('/api/chat_lines?serverCode=' + TQGlobals.serverCode + \"&minId=\" + (minId == null ? \"\" : minId.toString()))\n                .then(response => {\n                    let result = response.data as LinesAndAuctions;\n                    this.onNewContent(result);\n                })\n                .catch(err => {\n                    // stub\n                    console.log(err);\n                }); // end axios.get(chat_lines)\n        },\n\n        // inherited from LiveView\n        getEarlierContent: function () {\n            // stub\n        },\n\n    },\n    components: {\n        AuctionView\n    }\n});\n",{"version":3,"sources":["AuctionListView.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"AuctionListView.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n    <div>\r\n        <div>Auction View:</div>\r\n        <div>\r\n            <auction-view v-for=\"auction in viewAuctions\" :key=\"auction.id\" :auction=\"auction\"></auction-view>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import axios from \"axios\";\r\n    import mixins from 'vue-typed-mixins';\r\n    import * as _ from \"lodash\";\r\n\r\n    import LinesAndAuctions from \"../interfaces/LinesAndAuctions\";\r\n\r\n    import LiveView from \"../mixins/LiveView\";\r\n\r\n    import TQGlobals from \"../classes/TQGlobals\";\r\n\r\n    import AuctionView from \"./AuctionView.vue\";\r\n\r\n\r\n    export default mixins(LiveView).extend({\r\n        computed: {\r\n            viewAuctions: function () {\r\n                return _.clone(this.auctions.array).reverse();\r\n            }\r\n        },\r\n        created: function () {\r\n        },\r\n        mounted: function () {\r\n        },\r\n        methods: {\r\n\r\n            // inherited from LiveView\r\n            getLatestContent: function () {\r\n                let minId: number | null = null;\r\n                if (this.chatLines.array.length > 0)\r\n                    minId = this.chatLines.array[this.chatLines.array.length - 1].id + 1;\r\n\r\n                axios.get('/api/chat_lines?serverCode=' + TQGlobals.serverCode + \"&minId=\" + (minId == null ? \"\" : minId.toString()))\r\n                    .then(response => {\r\n                        let result = response.data as LinesAndAuctions;\r\n                        this.onNewContent(result);\r\n                    })\r\n                    .catch(err => {\r\n                        // stub\r\n                        console.log(err);\r\n                    }); // end axios.get(chat_lines)\r\n            },\r\n\r\n            // inherited from LiveView\r\n            getEarlierContent: function () {\r\n                // stub\r\n            },\r\n\r\n        },\r\n        components: {\r\n            AuctionView\r\n        }\r\n    });\r\n</script>\r\n\r\n<style>\r\n</style>"]}]}