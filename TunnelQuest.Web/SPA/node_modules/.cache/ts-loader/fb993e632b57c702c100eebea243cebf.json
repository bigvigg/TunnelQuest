{"remainingRequest":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\thread-loader\\dist\\cjs.js!c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\ts-loader\\index.js??ref--12-2!c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\classes\\PriceHistoryRepo.ts","dependencies":[{"path":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\classes\\PriceHistoryRepo.ts","mtime":1552615562646},{"path":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\ts-loader\\index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import axios from \"axios\";\r\nvar PriceHistoryRepo = /** @class */ (function () {\r\n    function PriceHistoryRepo() {\r\n        this.pendingItemNames = new Array();\r\n        this.priceHistories = {};\r\n    }\r\n    PriceHistoryRepo.prototype.get = function (itemName, fetchImmediately) {\r\n        if (fetchImmediately === void 0) { fetchImmediately = true; }\r\n        var priceHistory = this.priceHistories[itemName];\r\n        if (priceHistory)\r\n            return priceHistory;\r\n        else {\r\n            // it's important to actually declare every single property explicitly now, so that the properties exist\r\n            // when Vue wires into them, before we get the price history data back from the server\r\n            var blankPriceHistory = {};\r\n            blankPriceHistory.isFetched = false;\r\n            blankPriceHistory.itemName = itemName;\r\n            blankPriceHistory.oneMonthMedian = null;\r\n            blankPriceHistory.threeMonthMedian = null;\r\n            blankPriceHistory.sixMonthMedian = null;\r\n            blankPriceHistory.twelveMonthMedian = null;\r\n            blankPriceHistory.lifetimeMedian = null;\r\n            blankPriceHistory.updatedAtString = \"\";\r\n            this.priceHistories[itemName] = blankPriceHistory;\r\n            this.pendingItemNames.push(itemName);\r\n            if (fetchImmediately)\r\n                this.fetchPendingPriceHistories();\r\n            return blankPriceHistory;\r\n        }\r\n    };\r\n    PriceHistoryRepo.prototype.fetchPendingPriceHistories = function () {\r\n        var _this = this;\r\n        if (this.pendingItemNames.length == 0)\r\n            return;\r\n        // stub\r\n        console.log(\"PriceHistoryRepo.fetchPendingPriceHistories()\");\r\n        axios.post('/api/price_history', { itemNames: this.pendingItemNames.splice(0) }) // splice clears the array here\r\n            .then(function (response) {\r\n            var result = response.data;\r\n            // stub\r\n            console.log(result);\r\n            for (var _i = 0, result_1 = result; _i < result_1.length; _i++) {\r\n                var priceHistory = result_1[_i];\r\n                // update the blank .priceHistories[] object with the actual data\r\n                var blankPriceHistory = _this.priceHistories[priceHistory.itemName];\r\n                if (blankPriceHistory) {\r\n                    blankPriceHistory.isFetched = true;\r\n                    blankPriceHistory.oneMonthMedian = priceHistory.oneMonthMedian;\r\n                    blankPriceHistory.threeMonthMedian = priceHistory.threeMonthMedian;\r\n                    blankPriceHistory.sixMonthMedian = priceHistory.sixMonthMedian;\r\n                    blankPriceHistory.twelveMonthMedian = priceHistory.twelveMonthMedian;\r\n                    blankPriceHistory.lifetimeMedian = priceHistory.lifetimeMedian;\r\n                    blankPriceHistory.updatedAtString = priceHistory.updatedAtString;\r\n                }\r\n                else {\r\n                    console.log(\"ERROR got back unexpected priceHistory.itemName: \" + priceHistory.itemName);\r\n                }\r\n            }\r\n        })\r\n            .catch(function (err) {\r\n            // stub\r\n            console.log(err);\r\n        });\r\n    };\r\n    return PriceHistoryRepo;\r\n}());\r\nexport default PriceHistoryRepo;\r\n",{"version":3,"file":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\classes\\PriceHistoryRepo.ts","sourceRoot":"","sources":["c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\classes\\PriceHistoryRepo.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport axios from \"axios\";\r\n\r\nimport PriceHistory from \"../interfaces/PriceHistory\";\r\n\r\nclass PriceHistoryRepo {\r\n\r\n    private pendingItemNames: Array<string> = new Array<string>();\r\n    private priceHistories: { [itemName: string]: PriceHistory } = {};\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public get(itemName: string, fetchImmediately: boolean = true) {\r\n        let priceHistory = this.priceHistories[itemName];\r\n\r\n        if (priceHistory)\r\n            return priceHistory;\r\n        else {\r\n            // it's important to actually declare every single property explicitly now, so that the properties exist\r\n            // when Vue wires into them, before we get the price history data back from the server\r\n            let blankPriceHistory = {} as PriceHistory;\r\n\r\n            blankPriceHistory.isFetched = false;\r\n            blankPriceHistory.itemName = itemName;\r\n            blankPriceHistory.oneMonthMedian = null;\r\n            blankPriceHistory.threeMonthMedian = null;\r\n            blankPriceHistory.sixMonthMedian = null;\r\n            blankPriceHistory.twelveMonthMedian = null;\r\n            blankPriceHistory.lifetimeMedian = null;\r\n            blankPriceHistory.updatedAtString = \"\";\r\n\r\n\r\n            this.priceHistories[itemName] = blankPriceHistory;\r\n            this.pendingItemNames.push(itemName);\r\n\r\n            if (fetchImmediately)\r\n                this.fetchPendingPriceHistories();\r\n\r\n            return blankPriceHistory;\r\n        }\r\n    }\r\n\r\n\r\n    public fetchPendingPriceHistories() {\r\n        if (this.pendingItemNames.length == 0)\r\n            return;\r\n\r\n        // stub\r\n        console.log(\"PriceHistoryRepo.fetchPendingPriceHistories()\");\r\n        \r\n        axios.post('/api/price_history', { itemNames: this.pendingItemNames.splice(0) }) // splice clears the array here\r\n            .then(response => {\r\n                let result = response.data as Array<PriceHistory>;\r\n\r\n                // stub\r\n                console.log(result);\r\n\r\n                for (var priceHistory of result) {\r\n                    // update the blank .priceHistories[] object with the actual data\r\n                    let blankPriceHistory = this.priceHistories[priceHistory.itemName];\r\n\r\n                    if (blankPriceHistory) {\r\n                        blankPriceHistory.isFetched = true;\r\n                        blankPriceHistory.oneMonthMedian = priceHistory.oneMonthMedian;\r\n                        blankPriceHistory.threeMonthMedian = priceHistory.threeMonthMedian;\r\n                        blankPriceHistory.sixMonthMedian = priceHistory.sixMonthMedian;\r\n                        blankPriceHistory.twelveMonthMedian = priceHistory.twelveMonthMedian;\r\n                        blankPriceHistory.lifetimeMedian = priceHistory.lifetimeMedian;\r\n                        blankPriceHistory.updatedAtString = priceHistory.updatedAtString;\r\n                    }\r\n                    else {\r\n                        console.log(\"ERROR got back unexpected priceHistory.itemName: \" + priceHistory.itemName);\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // stub\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport default PriceHistoryRepo;"]}]}