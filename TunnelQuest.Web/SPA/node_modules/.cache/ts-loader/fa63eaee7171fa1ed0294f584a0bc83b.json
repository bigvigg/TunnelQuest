{"remainingRequest":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\thread-loader\\dist\\cjs.js!c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\ts-loader\\index.js??ref--12-2!c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\classes\\ItemRepo.ts","dependencies":[{"path":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\classes\\ItemRepo.ts","mtime":1552615510086},{"path":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\ts-loader\\index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import axios from \"axios\";\r\nvar ItemRepo = /** @class */ (function () {\r\n    function ItemRepo(spells) {\r\n        this.pendingItemNames = new Array();\r\n        this.items = {};\r\n        this.spellRepo = spells;\r\n    }\r\n    ItemRepo.prototype.get = function (itemName, fetchImmediately) {\r\n        if (fetchImmediately === void 0) { fetchImmediately = true; }\r\n        var item = this.items[itemName];\r\n        if (item)\r\n            return item;\r\n        else {\r\n            // it's important to actually declare every single property explicitly now, so that the properties exist\r\n            // when Vue wires into them, before we get the item data back from the server\r\n            var blankItem = {};\r\n            blankItem.itemName = itemName;\r\n            blankItem.iconFileName = null;\r\n            blankItem.isMagic = false;\r\n            blankItem.isLore = false;\r\n            blankItem.isNoDrop = false;\r\n            blankItem.isNoTrade = false;\r\n            blankItem.isTemporary = false;\r\n            blankItem.isQuestItem = false;\r\n            blankItem.isArtifact = false;\r\n            blankItem.requiredLevel = null;\r\n            blankItem.weight = 0;\r\n            blankItem.sizeCode = \"\";\r\n            // stats\r\n            blankItem.strength = null;\r\n            blankItem.stamina = null;\r\n            blankItem.agility = null;\r\n            blankItem.dexterity = null;\r\n            blankItem.wisdom = null;\r\n            blankItem.intelligence = null;\r\n            blankItem.charisma = null;\r\n            blankItem.hitPoints = null;\r\n            blankItem.mana = null;\r\n            blankItem.armorClass = null;\r\n            blankItem.magicResist = null;\r\n            blankItem.poisonResist = null;\r\n            blankItem.diseaseResist = null;\r\n            blankItem.fireResist = null;\r\n            blankItem.coldResist = null;\r\n            blankItem.haste = null;\r\n            // bard instruments\r\n            blankItem.singingModifier = null;\r\n            blankItem.percussionModifier = null;\r\n            blankItem.stringedModifier = null;\r\n            blankItem.brassModifier = null;\r\n            blankItem.windModifier = null;\r\n            // spell effect\r\n            blankItem.effectSpellName = null;\r\n            blankItem.effectTypeCode = null;\r\n            blankItem.effectMinimumLevel = null;\r\n            blankItem.effectCastingTime = null;\r\n            // weapons\r\n            blankItem.weaponSkillCode = null;\r\n            blankItem.attackDamage = null;\r\n            blankItem.attackDelay = null;\r\n            blankItem.range = null;\r\n            // containers\r\n            blankItem.capacity = null;\r\n            blankItem.capacitySizeCode = null;\r\n            blankItem.weightReduction = null;\r\n            // consumables\r\n            blankItem.isExpendable = null;\r\n            blankItem.maxCharges = null;\r\n            // relationships\r\n            blankItem.races = [];\r\n            blankItem.classes = [];\r\n            blankItem.slots = [];\r\n            blankItem.deities = [];\r\n            blankItem.info = [];\r\n            // will be manually set later by code\r\n            blankItem.isFetched = false;\r\n            blankItem.effectSpell = null;\r\n            this.items[itemName] = blankItem;\r\n            this.pendingItemNames.push(itemName);\r\n            if (fetchImmediately)\r\n                this.fetchPendingItems();\r\n            return blankItem;\r\n        }\r\n    };\r\n    ItemRepo.prototype.fetchPendingItems = function () {\r\n        var _this = this;\r\n        if (this.pendingItemNames.length == 0)\r\n            return;\r\n        // stub\r\n        console.log(\"ItemRepo.fetchPendingItems()\");\r\n        axios.post('/api/items', { itemNames: this.pendingItemNames.splice(0) }) // splice clears the array here\r\n            .then(function (response) {\r\n            var result = response.data;\r\n            // stub\r\n            console.log(result);\r\n            for (var _i = 0, result_1 = result; _i < result_1.length; _i++) {\r\n                var item = result_1[_i];\r\n                // update the blank .items[] object with the actual data\r\n                var blankItem = _this.items[item.itemName];\r\n                if (blankItem) {\r\n                    blankItem.iconFileName = item.iconFileName;\r\n                    blankItem.isMagic = item.isMagic;\r\n                    blankItem.isLore = item.isLore;\r\n                    blankItem.isNoDrop = item.isNoDrop;\r\n                    blankItem.isNoTrade = item.isNoTrade;\r\n                    blankItem.isTemporary = item.isTemporary;\r\n                    blankItem.isQuestItem = item.isQuestItem;\r\n                    blankItem.isArtifact = item.isArtifact;\r\n                    blankItem.requiredLevel = item.requiredLevel;\r\n                    blankItem.weight = item.weight;\r\n                    blankItem.sizeCode = item.sizeCode;\r\n                    // stats\r\n                    blankItem.strength = item.strength;\r\n                    blankItem.stamina = item.stamina;\r\n                    blankItem.agility = item.agility;\r\n                    blankItem.dexterity = item.dexterity;\r\n                    blankItem.wisdom = item.wisdom;\r\n                    blankItem.intelligence = item.intelligence;\r\n                    blankItem.charisma = item.charisma;\r\n                    blankItem.hitPoints = item.hitPoints;\r\n                    blankItem.mana = item.mana;\r\n                    blankItem.armorClass = item.armorClass;\r\n                    blankItem.magicResist = item.magicResist;\r\n                    blankItem.poisonResist = item.poisonResist;\r\n                    blankItem.diseaseResist = item.diseaseResist;\r\n                    blankItem.fireResist = item.fireResist;\r\n                    blankItem.coldResist = item.coldResist;\r\n                    blankItem.haste = item.haste;\r\n                    // bard instruments\r\n                    blankItem.singingModifier = item.singingModifier;\r\n                    blankItem.percussionModifier = item.percussionModifier;\r\n                    blankItem.stringedModifier = item.stringedModifier;\r\n                    blankItem.brassModifier = item.brassModifier;\r\n                    blankItem.windModifier = item.windModifier;\r\n                    // spell effect\r\n                    blankItem.effectSpellName = item.effectSpellName;\r\n                    blankItem.effectTypeCode = item.effectTypeCode;\r\n                    blankItem.effectMinimumLevel = item.effectMinimumLevel;\r\n                    blankItem.effectCastingTime = item.effectCastingTime;\r\n                    // weapons\r\n                    blankItem.weaponSkillCode = item.weaponSkillCode;\r\n                    blankItem.attackDamage = item.attackDamage;\r\n                    blankItem.attackDelay = item.attackDelay;\r\n                    blankItem.range = item.range;\r\n                    // containers\r\n                    blankItem.capacity = item.capacity;\r\n                    blankItem.capacitySizeCode = item.capacitySizeCode;\r\n                    blankItem.weightReduction = item.weightReduction;\r\n                    // consumables\r\n                    blankItem.isExpendable = item.isExpendable;\r\n                    blankItem.maxCharges = item.maxCharges;\r\n                    // relationships\r\n                    blankItem.races = item.races;\r\n                    blankItem.classes = item.classes;\r\n                    blankItem.slots = item.slots;\r\n                    blankItem.deities = item.deities;\r\n                    blankItem.info = item.info;\r\n                    // if the item is a spell scroll, then also go ahead and pull its spell\r\n                    if (blankItem.effectSpellName != null && blankItem.effectTypeCode == \"LearnSpell\")\r\n                        blankItem.effectSpell = _this.spellRepo.get(blankItem.effectSpellName, false);\r\n                    blankItem.isFetched = true;\r\n                }\r\n                else {\r\n                    console.log(\"ERROR got back unexpected item.itemName: \" + item.itemName);\r\n                }\r\n            } // end foreach (item)\r\n            _this.spellRepo.fetchPendingSpells();\r\n        })\r\n            .catch(function (err) {\r\n            // stub\r\n            console.log(err);\r\n        });\r\n    };\r\n    return ItemRepo;\r\n}());\r\nexport default ItemRepo;\r\n",{"version":3,"file":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\classes\\ItemRepo.ts","sourceRoot":"","sources":["c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\classes\\ItemRepo.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport axios from \"axios\";\r\n\r\nimport Item from \"../interfaces/Item\";\r\n\r\nimport SpellRepo from \"./SpellRepo\";\r\n\r\n\r\nclass ItemRepo {\r\n\r\n    private pendingItemNames: Array<string> = new Array<string>();\r\n    private items: { [itemName: string]: Item } = {};\r\n    private spellRepo: SpellRepo;\r\n\r\n    constructor(spells: SpellRepo) {\r\n        this.spellRepo = spells;\r\n    }\r\n\r\n    public get(itemName: string, fetchImmediately: boolean = true) {\r\n        let item = this.items[itemName];\r\n\r\n        if (item)\r\n            return item;\r\n        else {\r\n            // it's important to actually declare every single property explicitly now, so that the properties exist\r\n            // when Vue wires into them, before we get the item data back from the server\r\n            let blankItem = {} as Item;\r\n            \r\n            blankItem.itemName = itemName;\r\n\r\n            blankItem.iconFileName = null;\r\n            blankItem.isMagic = false;\r\n            blankItem.isLore = false;\r\n            blankItem.isNoDrop = false;\r\n            blankItem.isNoTrade = false;\r\n            blankItem.isTemporary = false;\r\n            blankItem.isQuestItem = false;\r\n            blankItem.isArtifact = false;\r\n            blankItem.requiredLevel = null;\r\n            blankItem.weight = 0;\r\n            blankItem.sizeCode = \"\";\r\n\r\n            // stats\r\n\r\n            blankItem.strength = null;\r\n            blankItem.stamina = null;\r\n            blankItem.agility = null;\r\n            blankItem.dexterity = null;\r\n            blankItem.wisdom = null;\r\n            blankItem.intelligence = null;\r\n            blankItem.charisma = null;\r\n            blankItem.hitPoints = null;\r\n            blankItem.mana = null;\r\n            blankItem.armorClass = null;\r\n            blankItem.magicResist = null;\r\n            blankItem.poisonResist = null;\r\n            blankItem.diseaseResist = null;\r\n            blankItem.fireResist = null;\r\n            blankItem.coldResist = null;\r\n            blankItem.haste = null;\r\n\r\n            // bard instruments\r\n\r\n            blankItem.singingModifier = null;\r\n            blankItem.percussionModifier = null;\r\n            blankItem.stringedModifier = null;\r\n            blankItem.brassModifier = null;\r\n            blankItem.windModifier = null;\r\n\r\n            // spell effect\r\n\r\n            blankItem.effectSpellName = null;\r\n            blankItem.effectTypeCode = null;\r\n            blankItem.effectMinimumLevel = null;\r\n            blankItem.effectCastingTime = null;\r\n\r\n            // weapons\r\n\r\n            blankItem.weaponSkillCode = null;\r\n            blankItem.attackDamage = null;\r\n            blankItem.attackDelay = null;\r\n            blankItem.range = null;\r\n\r\n            // containers\r\n\r\n            blankItem.capacity = null;\r\n            blankItem.capacitySizeCode = null;\r\n            blankItem.weightReduction = null;\r\n\r\n            // consumables\r\n\r\n            blankItem.isExpendable = null;\r\n            blankItem.maxCharges = null;\r\n\r\n            // relationships\r\n\r\n            blankItem.races = [];\r\n            blankItem.classes = [];\r\n            blankItem.slots = [];\r\n            blankItem.deities = [];\r\n            blankItem.info = [];\r\n\r\n            // will be manually set later by code\r\n            blankItem.isFetched = false;\r\n            blankItem.effectSpell = null;\r\n\r\n\r\n            this.items[itemName] = blankItem;\r\n            this.pendingItemNames.push(itemName);\r\n\r\n            if (fetchImmediately)\r\n                this.fetchPendingItems();\r\n\r\n            return blankItem;\r\n        }\r\n    }\r\n\r\n\r\n    public fetchPendingItems() {\r\n        if (this.pendingItemNames.length == 0)\r\n            return;\r\n\r\n        // stub\r\n        console.log(\"ItemRepo.fetchPendingItems()\");\r\n        \r\n        axios.post('/api/items', { itemNames: this.pendingItemNames.splice(0) }) // splice clears the array here\r\n            .then(response => {\r\n                let result = response.data as Array<Item>;\r\n\r\n                // stub\r\n                console.log(result);\r\n\r\n                for (var item of result) {\r\n                    // update the blank .items[] object with the actual data\r\n                    let blankItem = this.items[item.itemName];\r\n                    if (blankItem) {\r\n                        blankItem.iconFileName = item.iconFileName;\r\n                        blankItem.isMagic = item.isMagic;\r\n                        blankItem.isLore = item.isLore;\r\n                        blankItem.isNoDrop = item.isNoDrop;\r\n                        blankItem.isNoTrade = item.isNoTrade;\r\n                        blankItem.isTemporary = item.isTemporary;\r\n                        blankItem.isQuestItem = item.isQuestItem;\r\n                        blankItem.isArtifact = item.isArtifact;\r\n                        blankItem.requiredLevel = item.requiredLevel;\r\n                        blankItem.weight = item.weight;\r\n                        blankItem.sizeCode = item.sizeCode;\r\n\r\n                        // stats\r\n\r\n                        blankItem.strength = item.strength;\r\n                        blankItem.stamina = item.stamina;\r\n                        blankItem.agility = item.agility;\r\n                        blankItem.dexterity = item.dexterity;\r\n                        blankItem.wisdom = item.wisdom;\r\n                        blankItem.intelligence = item.intelligence;\r\n                        blankItem.charisma = item.charisma;\r\n                        blankItem.hitPoints = item.hitPoints;\r\n                        blankItem.mana = item.mana;\r\n                        blankItem.armorClass = item.armorClass;\r\n                        blankItem.magicResist = item.magicResist;\r\n                        blankItem.poisonResist = item.poisonResist;\r\n                        blankItem.diseaseResist = item.diseaseResist;\r\n                        blankItem.fireResist = item.fireResist;\r\n                        blankItem.coldResist = item.coldResist;\r\n                        blankItem.haste = item.haste;\r\n\r\n                        // bard instruments\r\n\r\n                        blankItem.singingModifier = item.singingModifier;\r\n                        blankItem.percussionModifier = item.percussionModifier;\r\n                        blankItem.stringedModifier = item.stringedModifier;\r\n                        blankItem.brassModifier = item.brassModifier;\r\n                        blankItem.windModifier = item.windModifier;\r\n\r\n                        // spell effect\r\n\r\n                        blankItem.effectSpellName = item.effectSpellName;\r\n                        blankItem.effectTypeCode = item.effectTypeCode;\r\n                        blankItem.effectMinimumLevel = item.effectMinimumLevel;\r\n                        blankItem.effectCastingTime = item.effectCastingTime;\r\n\r\n                        // weapons\r\n\r\n                        blankItem.weaponSkillCode = item.weaponSkillCode;\r\n                        blankItem.attackDamage = item.attackDamage;\r\n                        blankItem.attackDelay = item.attackDelay;\r\n                        blankItem.range = item.range;\r\n\r\n                        // containers\r\n\r\n                        blankItem.capacity = item.capacity;\r\n                        blankItem.capacitySizeCode = item.capacitySizeCode;\r\n                        blankItem.weightReduction = item.weightReduction;\r\n\r\n                        // consumables\r\n\r\n                        blankItem.isExpendable = item.isExpendable;\r\n                        blankItem.maxCharges = item.maxCharges;\r\n\r\n                        // relationships\r\n\r\n                        blankItem.races = item.races;\r\n                        blankItem.classes = item.classes;\r\n                        blankItem.slots = item.slots;\r\n                        blankItem.deities = item.deities;\r\n                        blankItem.info = item.info;\r\n\r\n                        // if the item is a spell scroll, then also go ahead and pull its spell\r\n                        if (blankItem.effectSpellName != null && blankItem.effectTypeCode == \"LearnSpell\")\r\n                            blankItem.effectSpell = this.spellRepo.get(blankItem.effectSpellName, false);\r\n\r\n                        blankItem.isFetched = true;\r\n                    }\r\n                    else {\r\n                        console.log(\"ERROR got back unexpected item.itemName: \" + item.itemName);\r\n                    }\r\n                } // end foreach (item)\r\n\r\n                this.spellRepo.fetchPendingSpells();\r\n            })\r\n            .catch(err => {\r\n                // stub\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport default ItemRepo;"]}]}