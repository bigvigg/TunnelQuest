{"remainingRequest":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\ts-loader\\index.js??ref--12-2!C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\components\\ChatPage.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\components\\ChatPage.vue","mtime":1552274439101},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from \"axios\";\r\nimport mixins from 'vue-typed-mixins';\r\nimport * as _ from \"lodash\";\r\nimport LivePage from \"../mixins/LivePage\";\r\nimport SiteHeader from \"./SiteHeader.vue\";\r\nimport ConnectionStatusView from \"./ConnectionStatusView.vue\";\r\nimport ChatLineView from \"./ChatLineView.vue\";\r\nimport TQGlobals from \"../classes/TQGlobals\";\r\nimport SlidingList from \"../classes/SlidingList\";\r\nexport default mixins(LivePage).extend({\r\n    name: \"ChatPage\",\r\n    data: function () {\r\n        return {\r\n            // STUB hard-coded\r\n            serverCode: \"BLUE\",\r\n            chatLines: new SlidingList(function (a, b) {\r\n                // sort ascending\r\n                if (a.id < b.id)\r\n                    return -1;\r\n                else if (a.id > b.id)\r\n                    return 1;\r\n                else\r\n                    return 0;\r\n            })\r\n        };\r\n    },\r\n    computed: {\r\n        viewLines: function () {\r\n            return _.clone(this.chatLines.array).reverse();\r\n        }\r\n    },\r\n    methods: {\r\n        // inherited from LivePage\r\n        getHubUrl: function () {\r\n            // STUB hard-coded\r\n            return \"/blue_chat_hub\";\r\n        },\r\n        // inherited from LivePage\r\n        onInitialized: function () {\r\n            console.log(\"stub ChatPage.onInitialized\");\r\n            this.chatLines.maxSize = TQGlobals.settings.maxChatLines;\r\n        },\r\n        // inherited from TqPage\r\n        getLatestContent: function () {\r\n            var _this = this;\r\n            var minId = null;\r\n            if (this.chatLines.array.length > 0)\r\n                minId = this.chatLines.array[this.chatLines.array.length - 1].id + 1;\r\n            axios.post('/api/chat_query', {\r\n                serverCode: this.serverCode,\r\n                minimumId: minId\r\n            })\r\n                .then(function (response) {\r\n                var result = response.data;\r\n                _this.onNewContent(result, true);\r\n            })\r\n                .catch(function (err) {\r\n                // stub\r\n                console.log(err);\r\n            });\r\n        },\r\n        // inherited from TqPage\r\n        getEarlierContent: function () {\r\n            var _this = this;\r\n            var maxId = null;\r\n            if (this.chatLines.array.length > 0)\r\n                maxId = this.chatLines.array[0].id - 1;\r\n            axios.post('/api/chat_query', {\r\n                serverCode: this.serverCode,\r\n                maximumId: maxId\r\n            })\r\n                .then(function (response) {\r\n                var result = response.data;\r\n                _this.onNewContent(result, false);\r\n            })\r\n                .catch(function (err) {\r\n                // stub\r\n                console.log(err);\r\n            });\r\n        },\r\n        // inherited from TqPage\r\n        onFilteredContent: function (newContent, enforceMaxSize) {\r\n            // stub\r\n            console.log(\"ChatPage.onNewContent():\");\r\n            console.log(newContent);\r\n            for (var chatLineId in newContent.lines) {\r\n                var chatLine = newContent.lines[chatLineId];\r\n                this.chatLines.add(chatLine);\r\n            }\r\n            if (enforceMaxSize)\r\n                this.chatLines.enforceMaxSize();\r\n            this.chatLines.sort();\r\n        },\r\n        // inherited from LivePage\r\n        onDestroying: function () {\r\n            this.chatLines.clear();\r\n        },\r\n    },\r\n    components: {\r\n        SiteHeader: SiteHeader,\r\n        ConnectionStatusView: ConnectionStatusView,\r\n        ChatLineView: ChatLineView\r\n    },\r\n});\r\n",{"version":3,"file":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\components\\ChatPage.vue.ts","sourceRoot":"","sources":["C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\components\\ChatPage.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"AA2BA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,MAAM,MAAM,kBAAkB,CAAC;AACtC,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAK5B,OAAO,QAAQ,MAAM,oBAAoB,CAAC;AAE1C,OAAO,UAAU,MAAM,kBAAkB,CAAC;AAC1C,OAAO,oBAAoB,MAAM,4BAA4B,CAAC;AAC9D,OAAO,YAAY,MAAM,oBAAoB,CAAC;AAE9C,OAAO,SAAS,MAAM,sBAAsB,CAAC;AAC7C,OAAO,WAAW,MAAM,wBAAwB,CAAC;AAEjD,eAAe,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;IAEnC,IAAI,EAAE,UAAU;IAEhB,IAAI,EAAE;QACF,OAAO;YACH,kBAAkB;YAClB,UAAU,EAAE,MAAM;YAElB,SAAS,EAAE,IAAI,WAAW,CAAW,UAAU,CAAW,EAAE,CAAW;gBACnE,iBAAiB;gBACjB,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;oBACX,OAAO,CAAC,CAAC,CAAC;qBACT,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;oBAChB,OAAO,CAAC,CAAC;;oBAET,OAAO,CAAC,CAAC;YACjB,CAAC,CAAC;SACL,CAAC;IACN,CAAC;IAED,QAAQ,EAAE;QACN,SAAS,EAAE;YACP,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;QACnD,CAAC;KACJ;IAED,OAAO,EAAE;QAEL,0BAA0B;QAC1B,SAAS,EAAE;YACP,kBAAkB;YAClB,OAAO,gBAAgB,CAAC;QAC5B,CAAC;QAED,0BAA0B;QAC1B,aAAa,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;YAE3C,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;QAC7D,CAAC;QAED,wBAAwB;QACxB,gBAAgB,EAAE;YAAA,iBAiBjB;YAhBG,IAAI,KAAK,GAAkB,IAAI,CAAC;YAChC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;gBAC/B,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAEzE,KAAK,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBAC1B,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,SAAS,EAAE,KAAK;aACnB,CAAC;iBACD,IAAI,CAAC,UAAA,QAAQ;gBACV,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAwB,CAAC;gBAC/C,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACpC,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,GAAG;gBACN,OAAO;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC;QAED,wBAAwB;QACxB,iBAAiB,EAAE;YAAA,iBAiBlB;YAhBG,IAAI,KAAK,GAAkB,IAAI,CAAC;YAChC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;gBAC/B,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAE3C,KAAK,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBAC1B,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,SAAS,EAAE,KAAK;aACnB,CAAC;iBACD,IAAI,CAAC,UAAA,QAAQ;gBACV,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAwB,CAAC;gBAC/C,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YACrC,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,GAAG;gBACN,OAAO;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC;QAED,wBAAwB;QACxB,iBAAiB,EAAE,UAAU,UAA4B,EAAE,cAAuB;YAC9E,OAAO;YACP,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAExB,KAAK,IAAI,UAAU,IAAI,UAAU,CAAC,KAAK,EAAE;gBACrC,IAAI,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBAC5C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aAChC;YAED,IAAI,cAAc;gBACd,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;YACpC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QAC1B,CAAC;QAED,0BAA0B;QAC1B,YAAY,EAAE;YACV,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAC3B,CAAC;KACJ;IAED,UAAU,EAAE;QACR,UAAU,YAAA;QACV,oBAAoB,sBAAA;QACpB,YAAY,cAAA;KACf;CACJ,CAAC,CAAC","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport axios from \"axios\";\nimport mixins from 'vue-typed-mixins';\nimport * as _ from \"lodash\";\n\nimport ChatLine from \"../interfaces/ChatLine\";\nimport LinesAndAuctions from \"../interfaces/LinesAndAuctions\";\n\nimport LivePage from \"../mixins/LivePage\";\n\nimport SiteHeader from \"./SiteHeader.vue\";\nimport ConnectionStatusView from \"./ConnectionStatusView.vue\";\nimport ChatLineView from \"./ChatLineView.vue\";\n\nimport TQGlobals from \"../classes/TQGlobals\";\nimport SlidingList from \"../classes/SlidingList\";\n\nexport default mixins(LivePage).extend({\n\n    name: \"ChatPage\",\n\n    data: function () {\n        return {\n            // STUB hard-coded\n            serverCode: \"BLUE\",\n\n            chatLines: new SlidingList<ChatLine>(function (a: ChatLine, b: ChatLine) {\n                // sort ascending\n                if (a.id < b.id)\n                    return -1;\n                else if (a.id > b.id)\n                    return 1;\n                else\n                    return 0;\n            })\n        };\n    },\n\n    computed: {\n        viewLines: function () {\n            return _.clone(this.chatLines.array).reverse();\n        }\n    },\n\n    methods: {\n\n        // inherited from LivePage\n        getHubUrl: function () {\n            // STUB hard-coded\n            return \"/blue_chat_hub\";\n        },\n\n        // inherited from LivePage\n        onInitialized: function () {\n            console.log(\"stub ChatPage.onInitialized\");\n\n            this.chatLines.maxSize = TQGlobals.settings.maxChatLines;\n        },\n\n        // inherited from TqPage\n        getLatestContent: function () {\n            let minId: number | null = null;\n            if (this.chatLines.array.length > 0)\n                minId = this.chatLines.array[this.chatLines.array.length - 1].id + 1;\n\n            axios.post('/api/chat_query', {\n                serverCode: this.serverCode,\n                minimumId: minId\n            })\n            .then(response => {\n                let result = response.data as LinesAndAuctions;\n                this.onNewContent(result, true);\n            })\n            .catch(err => {\n                // stub\n                console.log(err);\n            });\n        },\n\n        // inherited from TqPage\n        getEarlierContent: function () {\n            let maxId: number | null = null;\n            if (this.chatLines.array.length > 0)\n                maxId = this.chatLines.array[0].id - 1;\n\n            axios.post('/api/chat_query', {\n                serverCode: this.serverCode,\n                maximumId: maxId\n            })\n            .then(response => {\n                let result = response.data as LinesAndAuctions;\n                this.onNewContent(result, false);\n            })\n            .catch(err => {\n                // stub\n                console.log(err);\n            });\n        },\n\n        // inherited from TqPage\n        onFilteredContent: function (newContent: LinesAndAuctions, enforceMaxSize: boolean) {\n            // stub\n            console.log(\"ChatPage.onNewContent():\");\n            console.log(newContent);\n\n            for (let chatLineId in newContent.lines) {\n                let chatLine = newContent.lines[chatLineId];\n                this.chatLines.add(chatLine);\n            }\n\n            if (enforceMaxSize)\n                this.chatLines.enforceMaxSize();\n            this.chatLines.sort();\n        },\n\n        // inherited from LivePage\n        onDestroying: function () {\n            this.chatLines.clear();\n        },\n    },\n\n    components: {\n        SiteHeader,\n        ConnectionStatusView,\n        ChatLineView\n    },\n});\n"]}]}