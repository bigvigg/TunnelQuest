{"remainingRequest":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\ts-loader\\index.js??ref--12-2!C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\classes\\TQGlobals.ts","dependencies":[{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\classes\\TQGlobals.ts","mtime":1551919409437},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\ts-loader\\index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import axios from \"axios\";\r\nimport ItemRepo from \"../classes/ItemRepo\";\r\nimport SpellRepo from \"../classes/SpellRepo\";\r\nimport PriceHistoryRepo from \"../classes/PriceHistoryRepo\";\r\nvar TQGlobals = /** @class */ (function () {\r\n    function TQGlobals() {\r\n    }\r\n    TQGlobals.init = function (callback) {\r\n        var _this = this;\r\n        if (this.settings)\r\n            callback(); // already initialized; callback immediately\r\n        else {\r\n            this.initCallbacks.push(callback);\r\n            if (!this.isInitializing) {\r\n                this.isInitializing = true;\r\n                //stub\r\n                console.log(\"TQGlobals initializing, making ajax call to api/settings\");\r\n                axios.get('/api/settings')\r\n                    .then(function (response) {\r\n                    _this.settings = response.data;\r\n                    _this.spells = new SpellRepo();\r\n                    _this.items = new ItemRepo(_this.spells);\r\n                    _this.priceHistories = new PriceHistoryRepo();\r\n                    _this.isInitializing = false;\r\n                    for (var _i = 0, _a = _this.initCallbacks; _i < _a.length; _i++) {\r\n                        var callback_1 = _a[_i];\r\n                        callback_1();\r\n                    }\r\n                })\r\n                    .catch(function (err) {\r\n                    _this.isInitializing = false;\r\n                    // stub\r\n                    console.log(err);\r\n                }); // end axios.get(settings)\r\n            }\r\n        }\r\n    };\r\n    // utility / helper functions\r\n    // code lifted from this stackoverflow post: https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\r\n    TQGlobals.formatNumber = function (numberToFormat, decimals, dec_point, thousands_sep) {\r\n        var n = !isFinite(+numberToFormat) ? 0 : +numberToFormat, prec = !isFinite(+decimals) ? 0 : Math.abs(decimals), sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep, dec = (typeof dec_point === 'undefined') ? '.' : dec_point, toFixedFix = function (n, prec) {\r\n            // Fix for IE parseFloat(0.55).toFixed(0) = 0;\r\n            var k = Math.pow(10, prec);\r\n            return Math.round(n * k) / k;\r\n        }, s = (prec ? toFixedFix(n, prec) : Math.round(n)).toString().split('.');\r\n        if (s[0].length > 3) {\r\n            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n        }\r\n        if ((s[1] || '').length < prec) {\r\n            s[1] = s[1] || '';\r\n            s[1] += new Array(prec - s[1].length + 1).join('0');\r\n        }\r\n        return s.join(dec);\r\n    };\r\n    TQGlobals.isInitializing = false;\r\n    TQGlobals.initCallbacks = new Array();\r\n    return TQGlobals;\r\n}());\r\nexport default TQGlobals;\r\n",{"version":3,"file":"C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\classes\\TQGlobals.ts","sourceRoot":"","sources":["C:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\classes\\TQGlobals.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nimport Settings from \"../interfaces/Settings\";\r\n\r\nimport ItemRepo from \"../classes/ItemRepo\";\r\nimport SpellRepo from \"../classes/SpellRepo\";\r\nimport PriceHistoryRepo from \"../classes/PriceHistoryRepo\";\r\n\r\nclass TQGlobals {\r\n\r\n    private static isInitializing: boolean = false;\r\n    private static initCallbacks: Array<Function> = new Array<Function>();\r\n\r\n    static settings: Settings;\r\n    static items: ItemRepo;\r\n    static spells: SpellRepo;\r\n    static priceHistories: PriceHistoryRepo;\r\n\r\n    static init(callback: Function) {\r\n\r\n        if (this.settings)\r\n            callback(); // already initialized; callback immediately\r\n        else {\r\n            this.initCallbacks.push(callback);\r\n\r\n            if (!this.isInitializing) {\r\n                this.isInitializing = true;\r\n\r\n                //stub\r\n                console.log(\"TQGlobals initializing, making ajax call to api/settings\");\r\n\r\n                axios.get('/api/settings')\r\n                    .then(response => {\r\n                        this.settings = response.data as Settings;\r\n                        this.spells = new SpellRepo();\r\n                        this.items = new ItemRepo(this.spells);\r\n                        this.priceHistories = new PriceHistoryRepo();\r\n\r\n                        this.isInitializing = false;\r\n\r\n                        for (let callback of this.initCallbacks) {\r\n                            callback();\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        this.isInitializing = false;\r\n\r\n                        // stub\r\n                        console.log(err);\r\n                    }); // end axios.get(settings)\r\n            }\r\n        }\r\n    }\r\n\r\n    // utility / helper functions\r\n\r\n    // code lifted from this stackoverflow post: https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\r\n    static formatNumber(numberToFormat: number, decimals: number, dec_point: string, thousands_sep: string) {\r\n        var n = !isFinite(+numberToFormat) ? 0 : +numberToFormat,\r\n            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n            sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,\r\n            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n            toFixedFix = function (n: number, prec: number) {\r\n                // Fix for IE parseFloat(0.55).toFixed(0) = 0;\r\n                var k = Math.pow(10, prec);\r\n                return Math.round(n * k) / k;\r\n            },\r\n            s = (prec ? toFixedFix(n, prec) : Math.round(n)).toString().split('.');\r\n        if (s[0].length > 3) {\r\n            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n        }\r\n        if ((s[1] || '').length < prec) {\r\n            s[1] = s[1] || '';\r\n            s[1] += new Array(prec - s[1].length + 1).join('0');\r\n        }\r\n        return s.join(dec);\r\n    }\r\n\r\n}\r\n\r\nexport default TQGlobals;"]}]}