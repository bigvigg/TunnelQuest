{"remainingRequest":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\thread-loader\\dist\\cjs.js!c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\ts-loader\\index.js??ref--12-2!c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\classes\\SpellRepo.ts","dependencies":[{"path":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\classes\\SpellRepo.ts","mtime":1552615567484},{"path":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\node_modules\\ts-loader\\index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import axios from \"axios\";\r\nvar SpellRepo = /** @class */ (function () {\r\n    function SpellRepo() {\r\n        this.pendingSpellNames = new Array();\r\n        this.spells = {};\r\n    }\r\n    SpellRepo.prototype.get = function (spellName, fetchImmediately) {\r\n        if (fetchImmediately === void 0) { fetchImmediately = true; }\r\n        var spell = this.spells[spellName];\r\n        if (spell)\r\n            return spell;\r\n        else {\r\n            // it's important to actually declare every single property explicitly now, so that the properties exist\r\n            // when Vue wires into them, before we get the spell data back from the server\r\n            var blankSpell = {};\r\n            blankSpell.spellName = spellName;\r\n            blankSpell.iconFileName = null;\r\n            blankSpell.description = null;\r\n            blankSpell.requirements = {};\r\n            blankSpell.details = [];\r\n            blankSpell.sources = [];\r\n            this.spells[spellName] = blankSpell;\r\n            this.pendingSpellNames.push(spellName);\r\n            if (fetchImmediately)\r\n                this.fetchPendingSpells();\r\n            return blankSpell;\r\n        }\r\n    };\r\n    SpellRepo.prototype.fetchPendingSpells = function () {\r\n        var _this = this;\r\n        if (this.pendingSpellNames.length == 0)\r\n            return;\r\n        // stub\r\n        console.log(\"SpellRepo.fetchPendingSpells()\");\r\n        axios.post('/api/spells', { spellNames: this.pendingSpellNames.splice(0) }) // splice clears the array here\r\n            .then(function (response) {\r\n            var result = response.data;\r\n            // stub\r\n            console.log(result);\r\n            for (var _i = 0, result_1 = result; _i < result_1.length; _i++) {\r\n                var spell = result_1[_i];\r\n                // update the blank .spells[] object with the actual data\r\n                var blankSpell = _this.spells[spell.spellName];\r\n                if (blankSpell) {\r\n                    blankSpell.iconFileName = spell.iconFileName;\r\n                    blankSpell.description = spell.description;\r\n                    blankSpell.requirements = spell.requirements;\r\n                    blankSpell.details = spell.details;\r\n                    blankSpell.sources = spell.sources;\r\n                }\r\n                else {\r\n                    console.log(\"ERROR got back unexpected spell.spellName: \" + spell.spellName);\r\n                }\r\n            }\r\n        })\r\n            .catch(function (err) {\r\n            // stub\r\n            console.log(err);\r\n        });\r\n    };\r\n    return SpellRepo;\r\n}());\r\nexport default SpellRepo;\r\n",{"version":3,"file":"c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\classes\\SpellRepo.ts","sourceRoot":"","sources":["c:\\Users\\joe\\source\\repos\\TunnelQuest\\TunnelQuest.Web\\SPA\\src\\classes\\SpellRepo.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,OAAO,CAAC;AAI1B;IAKI;QAHQ,sBAAiB,GAAkB,IAAI,KAAK,EAAU,CAAC;QACvD,WAAM,GAAmC,EAAE,CAAC;IAGpD,CAAC;IAEM,uBAAG,GAAV,UAAW,SAAiB,EAAE,gBAAgC;QAAhC,iCAAA,EAAA,uBAAgC;QAC1D,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAEnC,IAAI,KAAK;YACL,OAAO,KAAK,CAAC;aACZ;YACD,wGAAwG;YACxG,8EAA8E;YAC9E,IAAI,UAAU,GAAG,EAAW,CAAC;YAE7B,UAAU,CAAC,SAAS,GAAG,SAAS,CAAC;YACjC,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC;YAC/B,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC;YAC9B,UAAU,CAAC,YAAY,GAAG,EAAE,CAAC;YAC7B,UAAU,CAAC,OAAO,GAAG,EAAE,CAAC;YACxB,UAAU,CAAC,OAAO,GAAG,EAAE,CAAC;YAExB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC;YACpC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAEvC,IAAI,gBAAgB;gBAChB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAE9B,OAAO,UAAU,CAAC;SACrB;IACL,CAAC;IAGM,sCAAkB,GAAzB;QAAA,iBAkCC;QAjCG,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC;YAClC,OAAO;QAEX,OAAO;QACP,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAE9C,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,+BAA+B;aACtG,IAAI,CAAC,UAAA,QAAQ;YACV,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAoB,CAAC;YAE3C,OAAO;YACP,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAEpB,KAAkB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM,EAAE;gBAArB,IAAI,KAAK,eAAA;gBACV,yDAAyD;gBACzD,IAAI,UAAU,GAAG,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;gBAE9C,IAAI,UAAU,EAAE;oBACZ,UAAU,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;oBAC7C,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;oBAC3C,UAAU,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;oBAC7C,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;oBACnC,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;iBACtC;qBACI;oBACD,OAAO,CAAC,GAAG,CAAC,6CAA6C,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;iBAChF;aACJ;QACL,CAAC,CAAC;aACD,KAAK,CAAC,UAAA,GAAG;YACN,OAAO;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACX,CAAC;IAEL,gBAAC;AAAD,CAAC,AAxED,IAwEC;AAED,eAAe,SAAS,CAAC","sourcesContent":["\r\nimport axios from \"axios\";\r\n\r\nimport Spell from \"../interfaces/Spell\";\r\n\r\nclass SpellRepo {\r\n\r\n    private pendingSpellNames: Array<string> = new Array<string>();\r\n    private spells: { [spellName: string]: Spell } = {};\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public get(spellName: string, fetchImmediately: boolean = true) {\r\n        let spell = this.spells[spellName];\r\n\r\n        if (spell)\r\n            return spell;\r\n        else {\r\n            // it's important to actually declare every single property explicitly now, so that the properties exist\r\n            // when Vue wires into them, before we get the spell data back from the server\r\n            let blankSpell = {} as Spell;\r\n\r\n            blankSpell.spellName = spellName;\r\n            blankSpell.iconFileName = null;\r\n            blankSpell.description = null;\r\n            blankSpell.requirements = {};\r\n            blankSpell.details = [];\r\n            blankSpell.sources = [];\r\n\r\n            this.spells[spellName] = blankSpell;\r\n            this.pendingSpellNames.push(spellName);\r\n\r\n            if (fetchImmediately)\r\n                this.fetchPendingSpells();\r\n\r\n            return blankSpell;\r\n        }\r\n    }\r\n\r\n\r\n    public fetchPendingSpells() {\r\n        if (this.pendingSpellNames.length == 0)\r\n            return;\r\n\r\n        // stub\r\n        console.log(\"SpellRepo.fetchPendingSpells()\");\r\n\r\n        axios.post('/api/spells', { spellNames: this.pendingSpellNames.splice(0) }) // splice clears the array here\r\n            .then(response => {\r\n                let result = response.data as Array<Spell>;\r\n\r\n                // stub\r\n                console.log(result);\r\n\r\n                for (var spell of result) {\r\n                    // update the blank .spells[] object with the actual data\r\n                    let blankSpell = this.spells[spell.spellName];\r\n\r\n                    if (blankSpell) {\r\n                        blankSpell.iconFileName = spell.iconFileName;\r\n                        blankSpell.description = spell.description;\r\n                        blankSpell.requirements = spell.requirements;\r\n                        blankSpell.details = spell.details;\r\n                        blankSpell.sources = spell.sources;\r\n                    }\r\n                    else {\r\n                        console.log(\"ERROR got back unexpected spell.spellName: \" + spell.spellName);\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // stub\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport default SpellRepo;"]}]}